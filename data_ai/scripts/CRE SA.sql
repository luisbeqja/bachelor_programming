DO $$ 
    BEGIN
			DROP TABLE GRADES ;
			DROP TABLE GRADE_TYPE_WEIGHTS ;
			DROP TABLE ENROLLMENTS ;
			-- (rdm) CASCADE CONSTRAINTS not available in postgres  
			-- DROP TABLE SECTIONS CASCADE CONSTRAINTS ;
			DROP TABLE SECTIONS CASCADE;
			DROP TABLE COURSES CASCADE;
			DROP TABLE GRADE_TYPES ;
			DROP TABLE INSTRUCTORS CASCADE;
			DROP TABLE STUDENTS ;
			DROP TABLE ZIPCODES ;
			DROP TABLE GRADE_CONVERSIONS ;
	EXCEPTION WHEN others THEN
         -- Do nothing, just raise notice
         RAISE NOTICE 'First time to run script - cannot drop tables!'  ;
    END;
$$;

-- (rdm) PROMPT not available in postgres 
-- workaround : comment out all PROMPT statements

-- PROMPT CREATING TABLE 'INSTRUCTORS'
CREATE TABLE INSTRUCTORS (
-- (rdm) NUMBER -> NUMERIC in postgres
-- 	INSTRUCTOR_ID NUMERIC(8,0) ,
 	INSTRUCTOR_ID NUMERIC(8,0) ,
-- (rdm) VARCHAR2 -> VARCHAR in postgres
-- 	SALUTATION VARCHAR(5) ,
	SALUTATION VARCHAR(5) ,
	FIRST_NAME VARCHAR(25) ,
	LAST_NAME VARCHAR(25) ,
	STREET_ADDRESS VARCHAR(50) ,
	ZIP VARCHAR(5) ,
	PHONE VARCHAR(15) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;

COMMENT ON TABLE INSTRUCTORS IS 'Profile information for an instructors.' ;
COMMENT ON COLUMN INSTRUCTORS.INSTRUCTOR_ID IS 'The unique ID for an instructors.' ;
COMMENT ON COLUMN INSTRUCTORS.SALUTATION IS 'This instructor''s title (Mr., Ms., Dr., Rev., etc.)' ;
COMMENT ON COLUMN INSTRUCTORS.FIRST_NAME IS 'This instructor''s first name.' ;
COMMENT ON COLUMN INSTRUCTORS.LAST_NAME IS 'This instructor''s last name' ;
COMMENT ON COLUMN INSTRUCTORS.STREET_ADDRESS IS 'This Instructor''s street address.' ;
COMMENT ON COLUMN INSTRUCTORS.ZIP IS 'The postal zip code for this instructor.' ;
COMMENT ON COLUMN INSTRUCTORS.PHONE IS 'The phone number for this instructor including area code.' ;
COMMENT ON COLUMN INSTRUCTORS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN INSTRUCTORS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN INSTRUCTORS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN INSTRUCTORS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'GRADE_TYPES'
CREATE TABLE GRADE_TYPES (
	GRADE_TYPE_CODE CHAR(2) ,
	DESCRIPTION VARCHAR(50) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE GRADE_TYPES IS 'Lookup table of a grade types (code) and its description.' ;
COMMENT ON COLUMN GRADE_TYPES.GRADE_TYPE_CODE IS 'The unique code which identifies a category of grade, i.e. MT, HW.' ;
COMMENT ON COLUMN GRADE_TYPES.DESCRIPTION IS 'The description for this code, i.e. Midterm, Homework.' ;
COMMENT ON COLUMN GRADE_TYPES.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN GRADE_TYPES.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN GRADE_TYPES.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN GRADE_TYPES.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'GRADE_CONVERSIONS'
CREATE TABLE GRADE_CONVERSIONS (LETTER_GRADE VARCHAR(2) ,
	GRADE_POINT NUMERIC(3,2) DEFAULT 0 ,
	MAX_GRADE NUMERIC(3,0) ,
	MIN_GRADE NUMERIC(3,0) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE GRADE_CONVERSIONS IS 'Converts a number grade to a letter grade.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.LETTER_GRADE IS 'The unique grade as a letter (A, A-, B, B+, etc.).' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.GRADE_POINT IS 'The number grade on a scale from 0 (F) to 4 (A).' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.MAX_GRADE IS 'The highest grade number which makes this letter grade.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.MIN_GRADE IS 'The lowest grade number which makes this letter grade.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN GRADE_CONVERSIONS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'STUDENTS'
CREATE TABLE STUDENTS (
	STUDENT_ID NUMERIC(8,0),
	SALUTATION VARCHAR(5) ,
	FIRST_NAME VARCHAR(25) ,
	LAST_NAME VARCHAR(25) ,
	STREET_ADDRESS VARCHAR(50) ,
	ZIP VARCHAR(5) ,
	PHONE VARCHAR(15) ,
	EMPLOYER VARCHAR(50) ,
	REGISTRATION_DATE DATE ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE STUDENTS IS 'Profile information for a student.' ;
COMMENT ON COLUMN STUDENTS.STUDENT_ID IS 'The unique ID for a student.' ;
COMMENT ON COLUMN STUDENTS.SALUTATION IS 'The student''s title (Ms., Mr., Dr., etc.).' ;
COMMENT ON COLUMN STUDENTS.FIRST_NAME IS 'This student''s first name.' ;
COMMENT ON COLUMN STUDENTS.LAST_NAME IS 'This student''s last name.' ;
COMMENT ON COLUMN STUDENTS.STREET_ADDRESS IS 'The student''s street address.' ;
COMMENT ON COLUMN STUDENTS.ZIP IS 'The postal zip code for this student.' ;
COMMENT ON COLUMN STUDENTS.PHONE IS 'The phone number for this student including area code.' ;
COMMENT ON COLUMN STUDENTS.EMPLOYER IS 'The name of the company where this student is employed.' ;
COMMENT ON COLUMN STUDENTS.REGISTRATION_DATE IS 'The date this student registered in the program.' ;
COMMENT ON COLUMN STUDENTS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN STUDENTS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN STUDENTS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN STUDENTS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'ZIPCODES'
CREATE TABLE ZIPCODES (ZIP VARCHAR(5) ,
	CITY VARCHAR(25) ,
	STATE VARCHAR(2) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE ZIPCODES IS 'City, state and zip code information.' ;
COMMENT ON COLUMN ZIPCODES.ZIP IS 'The zip code number, unique for a location and state.' ;
COMMENT ON COLUMN ZIPCODES.CITY IS 'The location name for this zip code.' ;
COMMENT ON COLUMN ZIPCODES.STATE IS 'The postal abbreviation for the US state.' ;
COMMENT ON COLUMN ZIPCODES.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN ZIPCODES.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN ZIPCODES.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN ZIPCODES.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'COURSES'
CREATE TABLE COURSES (
	COURSE_NO NUMERIC(8,0) ,
	DESCRIPTION VARCHAR(50) ,
	COST NUMERIC(9,2) ,
	PREREQUISITE NUMERIC(8,0) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE) ;
COMMENT ON TABLE COURSES IS 'Information for a course.' ;
COMMENT ON COLUMN COURSES.COURSE_NO IS 'The unique ID for a course.' ;
COMMENT ON COLUMN COURSES.DESCRIPTION IS 'The full name for this course.' ;
COMMENT ON COLUMN COURSES.COST IS 'The dollar amount charged for enrollment in this course.' ;
COMMENT ON COLUMN COURSES.PREREQUISITE IS 'The ID number of the course which must be taken as a prerequisite to this course.' ;
COMMENT ON COLUMN COURSES.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN COURSES.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN COURSES.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN COURSES.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- (rdm) No name can be defined to create a not-null constraint. 
-- ALTER TABLE INSTRUCTORS ALTER COLUMN CREATED_BY CONSTRAINT INST_CREATED_BY_NNULL NOT NULL;
ALTER TABLE INSTRUCTORS ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE INSTRUCTORS ALTER COLUMN CREATED_DATE SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'GRADE_TYPE'
ALTER TABLE GRADE_TYPES ALTER COLUMN DESCRIPTION SET NOT NULL;
ALTER TABLE GRADE_TYPES ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE GRADE_TYPES ALTER COLUMN CREATED_DATE SET  NOT NULL;
ALTER TABLE GRADE_TYPES ADD CONSTRAINT GRTYP_GRADE_TYPE_CODE_LENGTH CHECK (LENGTH(GRADE_TYPE_CODE) = 2);

-- PROMPT CREATING CHECK CONSTRAINTS ON 'GRADE_CONVERSIONS'
ALTER TABLE GRADE_CONVERSIONS ALTER COLUMN MAX_GRADE SET  NOT NULL ;
ALTER TABLE GRADE_CONVERSIONS ALTER COLUMN CREATED_DATE SET NOT NULL;
ALTER TABLE GRADE_CONVERSIONS ALTER COLUMN GRADE_POINT SET NOT NULL;
ALTER TABLE GRADE_CONVERSIONS ALTER COLUMN MIN_GRADE SET NOT NULL;
ALTER TABLE GRADE_CONVERSIONS ALTER COLUMN CREATED_BY SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'STUDENTS'
ALTER TABLE STUDENTS ALTER COLUMN REGISTRATION_DATE SET NOT NULL;
ALTER TABLE STUDENTS ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE STUDENTS ALTER COLUMN ZIP SET NOT NULL;
ALTER TABLE STUDENTS ALTER COLUMN LAST_NAME SET NOT NULL;
ALTER TABLE STUDENTS ALTER COLUMN CREATED_DATE SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'ZIPCODES'
ALTER TABLE ZIPCODES ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE ZIPCODES ALTER COLUMN CREATED_DATE SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'COURSES'
ALTER TABLE COURSES ALTER COLUMN CREATED_DATE SET NOT NULL;
ALTER TABLE COURSES ALTER COLUMN DESCRIPTION SET NOT NULL;
ALTER TABLE COURSES ALTER COLUMN CREATED_BY SET NOT NULL;

-- PROMPT CREATING PRIMARY KEY ON 'instructors'
ALTER TABLE INSTRUCTORS ADD CONSTRAINT INST_PK PRIMARY KEY (INSTRUCTOR_ID) ;

-- PROMPT CREATING PRIMARY KEY ON 'GRADE_TYPES'
ALTER TABLE GRADE_TYPES ADD CONSTRAINT GRTYP_PK PRIMARY KEY (GRADE_TYPE_CODE) ;

-- PROMPT CREATING PRIMARY KEY ON 'GRADE_CONVERSIONs'
ALTER TABLE GRADE_CONVERSIONS ADD CONSTRAINT GRCON_PK PRIMARY KEY (LETTER_GRADE) ;

-- PROMPT CREATING PRIMARY KEY ON 'STUDENTS'
ALTER TABLE STUDENTS ADD CONSTRAINT STU_PK PRIMARY KEY (STUDENT_ID) ;

-- PROMPT CREATING PRIMARY KEY ON 'ZIPCODES'
ALTER TABLE ZIPCODES ADD CONSTRAINT ZIP_PK PRIMARY KEY (ZIP) ;

-- PROMPT CREATING PRIMARY KEY ON 'COURSES'
ALTER TABLE COURSES ADD CONSTRAINT CRSE_PK PRIMARY KEY (COURSE_NO) ;

-- PROMPT CREATING FOREIGN KEYS ON 'instructors'
ALTER TABLE INSTRUCTORS ADD CONSTRAINT INST_ZIP_FK FOREIGN KEY (ZIP) REFERENCES ZIPCODES (ZIP) ;

-- PROMPT CREATING FOREIGN KEYS ON 'COURSES'
ALTER TABLE COURSES ADD CONSTRAINT CRSE_CRSE_FK FOREIGN KEY (PREREQUISITE) REFERENCES COURSES (COURSE_NO) ;

-- PROMPT CREATING FOREIGN KEYS ON 'STUDENTS'
ALTER TABLE STUDENTS ADD CONSTRAINT STU_ZIP_FK FOREIGN KEY (ZIP) REFERENCES ZIPCODES (ZIP) ;

-- PROMPT CREATING TABLE 'GRADES'
CREATE TABLE GRADES (
	STUDENT_ID NUMERIC(8,0) ,
	SECTION_ID NUMERIC(8,0) ,
	GRADE_TYPE_CODE CHAR(2) ,
	GRADE_CODE_OCCURRENCE NUMERIC(38,0) ,
	NUMERIC_GRADE NUMERIC(3,0) DEFAULT 0 ,
	COMMENTS VARCHAR(2000) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE GRADES IS 'The individual grades a student received for a particular section(class).' ;
COMMENT ON COLUMN GRADES.STUDENT_ID IS 'The unique ID for the student.' ;
COMMENT ON COLUMN GRADES.SECTION_ID IS 'The unique ID for a section.' ;
COMMENT ON COLUMN GRADES.GRADE_TYPE_CODE IS 'The code which identifies a category of grade.' ;
COMMENT ON COLUMN GRADES.GRADE_CODE_OCCURRENCE IS 'The sequence number of one grade type for one section. For example, there could be multiple assignments numbered 1, 2, 3, etc.' ;
COMMENT ON COLUMN GRADES.NUMERIC_GRADE IS 'Numeric grade value, (e.g. 70, 75.)' ;
COMMENT ON COLUMN GRADES.COMMENTS IS 'Instructor''s comments on this grade.' ;
COMMENT ON COLUMN GRADES.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN GRADES.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN GRADES.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN GRADES.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'GRADE_TYPE_WEIGHTS'
CREATE TABLE GRADE_TYPE_WEIGHTS (
	SECTION_ID NUMERIC(8,0) ,
	GRADE_TYPE_CODE CHAR(2) ,
	NUMBER_PER_SECTION NUMERIC(3,0) ,
	PERCENT_OF_FINAL_GRADE NUMERIC(3,0) ,
	DROP_LOWEST CHAR(1) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,
	MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE GRADE_TYPE_WEIGHTS IS 'Information on how the final grade for a particular section is computed.  For example, the midterm constitutes 50%, the quiz 10% and the final examination 40% of the final grade.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.SECTION_ID IS 'The unique section ID for a section.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.GRADE_TYPE_CODE IS 'The code which identifies a category of grade.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.NUMBER_PER_SECTION IS 'How many of these grade types can be used in this section.  That is, there may be 3 quizzes.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.PERCENT_OF_FINAL_GRADE IS 'The percentage this category of grade contributes to the final grade.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.DROP_LOWEST IS 'Is the lowest grade in this type removed when determining the final grade? (Y;N)' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN GRADE_TYPE_WEIGHTS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'SECTIONS'
CREATE TABLE SECTIONS (
	SECTION_ID NUMERIC(8, 0) ,
	COURSE_NO NUMERIC(8, 0) ,
	SECTION_NO NUMERIC(3, 0) ,
	START_DATE_TIME DATE ,LOCATION VARCHAR(50) ,
	INSTRUCTOR_ID NUMERIC(8, 0) ,
	CAPACITY NUMERIC(3, 0) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE SECTIONS IS 'Information for an individual section (class) of a particular course.' ;
COMMENT ON COLUMN SECTIONS.SECTION_ID IS 'The unique ID for a section.' ;
COMMENT ON COLUMN SECTIONS.COURSE_NO IS 'The course number for which this is a section.' ;
COMMENT ON COLUMN SECTIONS.SECTION_NO IS 'The individual section number within this course.' ;
COMMENT ON COLUMN SECTIONS.START_DATE_TIME IS 'The date and time on which this section meets.' ;
COMMENT ON COLUMN SECTIONS.LOCATION IS 'The meeting room for the section.' ;
COMMENT ON COLUMN SECTIONS.INSTRUCTOR_ID IS 'The ID number of the instructor who teaches this section.' ;
COMMENT ON COLUMN SECTIONS.CAPACITY IS 'The maximum number of students allowed in this section.' ;
COMMENT ON COLUMN SECTIONS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN SECTIONS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN SECTIONS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN SECTIONS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING TABLE 'ENROLLMENTS'
CREATE TABLE ENROLLMENTS (
	STUDENT_ID NUMERIC(8, 0) ,
	SECTION_ID NUMERIC(8, 0) ,
	ENROLL_DATE DATE ,FINAL_GRADE NUMERIC(3, 0) ,
	CREATED_BY VARCHAR(30) ,
	CREATED_DATE DATE ,MODIFIED_BY VARCHAR(30) ,
	MODIFIED_DATE DATE
	) ;
COMMENT ON TABLE ENROLLMENTS IS 'Information for a student registered for a particular section (class).' ;
COMMENT ON COLUMN ENROLLMENTS.STUDENT_ID IS 'The unique ID for a student.' ;
COMMENT ON COLUMN ENROLLMENTS.SECTION_ID IS 'The unique ID for a section.' ;
COMMENT ON COLUMN ENROLLMENTS.ENROLL_DATE IS 'The date this student registered for this section.' ;
COMMENT ON COLUMN ENROLLMENTS.FINAL_GRADE IS 'The final grade given to this student for all work in this section (class).' ;
COMMENT ON COLUMN ENROLLMENTS.CREATED_BY IS 'Audit column - indicates user who inserted data.' ;
COMMENT ON COLUMN ENROLLMENTS.CREATED_DATE IS 'Audit column - indicates date of insert.' ;
COMMENT ON COLUMN ENROLLMENTS.MODIFIED_BY IS 'Audit column - indicates who made last update.' ;
COMMENT ON COLUMN ENROLLMENTS.MODIFIED_DATE IS 'Audit column - date of last update.' ;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'GRADES'
ALTER TABLE GRADES ALTER COLUMN CREATED_DATE SET NOT NULL;
ALTER TABLE GRADES ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE GRADES ALTER COLUMN NUMERIC_GRADE SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'GRADE_TYPE_WEIGHTS'
ALTER TABLE GRADE_TYPE_WEIGHTS ALTER COLUMN NUMBER_PER_SECTION SET NOT NULL;
ALTER TABLE GRADE_TYPE_WEIGHTS ALTER COLUMN CREATED_DATE SET NOT NULL;
ALTER TABLE GRADE_TYPE_WEIGHTS ALTER COLUMN PERCENT_OF_FINAL_GRADE SET NOT NULL;
ALTER TABLE GRADE_TYPE_WEIGHTS ALTER COLUMN CREATED_BY SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'SECTIONS'
ALTER TABLE SECTIONS ALTER COLUMN CREATED_DATE SET NOT NULL;
ALTER TABLE SECTIONS ALTER COLUMN SECTION_NO SET NOT NULL;
ALTER TABLE SECTIONS ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE SECTIONS ALTER COLUMN INSTRUCTOR_ID SET NOT NULL;
ALTER TABLE SECTIONS ALTER COLUMN COURSE_NO SET NOT NULL;

-- PROMPT CREATING CHECK CONSTRAINTS ON 'ENROLLMENTS'
ALTER TABLE ENROLLMENTS 
	ALTER COLUMN ENROLL_DATE SET NOT NULL,
	ALTER COLUMN CREATED_BY SET NOT NULL,
	ALTER COLUMN CREATED_DATE SET NOT NULL;

-- PROMPT CREATING PRIMARY KEY ON 'GRADE'
ALTER TABLE GRADES ADD CONSTRAINT GR_PK PRIMARY KEY (
	STUDENT_ID ,
	SECTION_ID ,
	GRADE_TYPE_CODE ,
	GRADE_CODE_OCCURRENCE
	) ;

-- PROMPT CREATING PRIMARY KEY ON 'GRADE_TYPE_WEIGHTS'
ALTER TABLE GRADE_TYPE_WEIGHTS ADD CONSTRAINT GRTW_PK PRIMARY KEY (SECTION_ID ,GRADE_TYPE_CODE) ;

-- PROMPT CREATING PRIMARY KEY ON 'SECTIONS'
ALTER TABLE SECTIONS ADD CONSTRAINT SECT_PK PRIMARY KEY (SECTION_ID) ;

-- PROMPT CREATING PRIMARY KEY ON 'ENROLLMENTS'
ALTER TABLE ENROLLMENTS ADD CONSTRAINT ENR_PK PRIMARY KEY (STUDENT_ID , SECTION_ID) ;

-- PROMPT CREATING UNIQUE KEYS ON 'SECTIONS'
ALTER TABLE SECTIONS ADD CONSTRAINT SECT_SECT2_UK UNIQUE (SECTION_NO ,COURSE_NO) ;

-- PROMPT CREATING FOREIGN KEYS ON 'GRADES'
ALTER TABLE GRADES 
	ADD CONSTRAINT GR_ENR_FK FOREIGN KEY (STUDENT_ID , SECTION_ID) REFERENCES ENROLLMENTS (STUDENT_ID , SECTION_ID),  
	ADD CONSTRAINT GR_GRTW_FK FOREIGN KEY (SECTION_ID , GRADE_TYPE_CODE) REFERENCES GRADE_TYPE_WEIGHTS (SECTION_ID , GRADE_TYPE_CODE) ;

-- PROMPT CREATING FOREIGN KEYS ON 'GRADE_TYPE_WEIGHTS'
ALTER TABLE GRADE_TYPE_WEIGHTS 
	ADD CONSTRAINT GRTW_GRTYP_FK FOREIGN KEY (GRADE_TYPE_CODE) REFERENCES GRADE_TYPES (GRADE_TYPE_CODE), 
	ADD CONSTRAINT GRTW_SECT_FK FOREIGN KEY (SECTION_ID) REFERENCES SECTIONS (SECTION_ID) ;

-- PROMPT CREATING FOREIGN KEYS ON 'SECTIONS'
ALTER TABLE SECTIONS 
	ADD CONSTRAINT SECT_INST_FK FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS (INSTRUCTOR_ID),
	ADD CONSTRAINT SECT_CRSE_FK FOREIGN KEY (COURSE_NO) REFERENCES COURSES (COURSE_NO) ;

-- PROMPT CREATING FOREIGN KEYS ON 'ENROLLMENTS'
ALTER TABLE ENROLLMENTS 
	ADD CONSTRAINT ENR_STU_FK FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS (STUDENT_ID) ,
	ADD CONSTRAINT ENR_SECT_FK FOREIGN KEY (SECTION_ID) REFERENCES SECTIONS (SECTION_ID) ;